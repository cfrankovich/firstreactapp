{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onAdd","onClick","className","style","background","defaultProps","Header","title","showAddTask","Task","task","onDeleteTasks","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","onDeleteApp","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowAddTask","setTasks","length","console","log","filter","Math","floor","random","newTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEMA,EAAS,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC1B,OACI,wBACAC,QAASD,EACTE,UAAU,MACVC,MAAO,CAACC,WAAYN,GAHpB,SAIEC,KAIVF,EAAOQ,aAAe,CAClBP,MAAO,aAQID,QClBTS,EAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOP,EAAwB,EAAxBA,MAAOQ,EAAiB,EAAjBA,YAC3B,OACI,yBAAQN,UAAU,SAAlB,UACI,6BAAKK,IACL,cAAC,EAAD,CAAQT,MAAOU,EAAc,MAAQ,QAAST,KAAMS,EAAc,OAAS,MAAOR,MAAOA,QAMrGM,EAAOD,aAAe,CAClBE,MAAO,gBAeID,Q,OCTAG,EAlBF,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,SAChC,OAGI,cAFA,CAEA,OAAKV,UAAS,eAAUQ,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,+BAAKL,EAAKX,KAAV,IAAgB,cAAC,IAAD,CAASE,QAAS,kBAAMU,EAAcD,EAAKK,KAAKZ,MAAO,CAACL,MAAO,MAAOkB,OAAQ,gBAC9F,4BAAIN,EAAKO,UCUNC,EAhBD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaR,EAAc,EAAdA,SAChC,OACI,mCACGO,EAAME,KAAI,SAACX,GAAD,OACT,aADqB,CACpB,EAAD,CAAoBA,KAAMA,EAAMC,cAAeS,EAAaR,SAAUA,GAA3DF,EAAKK,UCkCbO,EAtCC,SAAC,GAAa,IAAZtB,EAAW,EAAXA,MAAW,EACDuB,mBAAS,IADR,mBAClBxB,EADkB,KACZyB,EADY,OAEHD,mBAAS,IAFN,mBAElBN,EAFkB,KAEbQ,EAFa,OAGOF,oBAAS,GAHhB,mBAGlBV,EAHkB,KAGRa,EAHQ,KAezB,OACI,uBAAMxB,UAAU,WAAWyB,SAXd,SAACC,GACdA,EAAEC,iBACG9B,EACAkB,GACLjB,EAAM,CAACD,OAAMkB,MAAKJ,aAClBW,EAAQ,IACRC,EAAO,IACPC,GAAY,IAJAI,MAAM,uBADLA,MAAM,wBASnB,UACI,sBAAK5B,UAAU,eAAf,UACI,yCACA,uBAAO6B,KAAK,OAAOC,YAAY,WAAWC,MAAOlC,EAAMmC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAE7F,sBAAK/B,UAAU,eAAf,UACI,+CACA,uBAAO6B,KAAK,OAAOC,YAAY,iBAAiBC,MAAOhB,EAAKiB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAEjG,sBAAK/B,UAAU,kCAAf,UACI,iDACA,uBAAO6B,KAAK,WAAWK,QAASvB,EAAUoB,MAAOpB,EAAUqB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAE5G,qBAAKlC,UAAU,eAAf,SACI,uBAAO6B,KAAK,SAASE,MAAM,YAAY/B,UAAU,wBCoElDoC,MA9Ff,WAAe,MAGyBf,oBAAS,GAHlC,mBAGNf,EAHM,KAGO+B,EAHP,OAKahB,mBAAS,CACjC,CACER,GAAI,EACJhB,KAAM,YACNkB,IAAK,sBACLJ,UAAU,GAEZ,CACEE,GAAI,EACJhB,KAAM,sBACNkB,IAAK,qBACLJ,UAAU,GAEZ,CACEE,GAAI,EACJhB,KAAM,eACNkB,IAAK,qBACLJ,UAAU,KAtBD,mBAKNM,EALM,KAKCqB,EALD,KA8Eb,OACE,sBAAKtC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQK,MAAM,eAAeC,YAAaA,EAAaR,MAAO,kBAAMuC,GAAgB/B,MACnFW,EAAMsB,OAAS,EAAI,cAAC,EAAD,CAAOtB,MAAOA,EAAOC,YAxC1B,SAACL,GAClB2B,QAAQC,IAAI,SAAU5B,GAetByB,EAASrB,EAAMyB,QAAO,SAAClC,GAAD,OACpBA,EAAKK,KAAOA,OAuBsDH,SAjB/C,SAACG,GACtB2B,QAAQC,IAAI5B,GACZyB,EAASrB,EAAME,KAAI,SAACX,GAAD,OACjBA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAYH,SAcyC,mBAC/FF,GAAe,cAAC,EAAD,CAASR,MArDb,SAACU,GACfgC,QAAQC,IAAI,SACZD,QAAQC,IAAIjC,GACZ,IAAMK,EAAK8B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EAC/CL,QAAQC,IAAI5B,GACZ,IAAMiC,EAAO,aAAIjC,MAAOL,GACxB8B,EAAS,GAAD,mBAAKrB,GAAL,CAAY6B,YC7BTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01b5c94c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onAdd}) => {\r\n    return (\r\n        <button \r\n        onClick={onAdd} \r\n        className='btn' \r\n        style={{background: color}}\r\n        >{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    test: PropTypes.string,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAddTask}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAddTask ? 'red' : 'green'} text={showAddTask ? 'Hide' : 'Add'} onAdd={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\n// This is not needed this is just validation\r\nHeader.defaultProps = { // this is if we dont take in a param in App.js\r\n    title: 'Task Tracker',\r\n  }\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n/*\r\nCSS in JS:\r\nconst headingStyle = {\r\n    color: 'red',\r\n    backgroundColor: 'black', // notice that its camel case not '-'\r\n}\r\n*/\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa' // \"npm i react-icons\"\r\n\r\nconst Task = ({task, onDeleteTasks, onToggle}) => {\r\n    return (\r\n        // work way back up from onClick\r\n        // its like setting variables and params over and over until its down here\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes onClick={() => onDeleteTasks(task.id)} style={{color: 'red', cursor: 'pointer'}}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n    // onClick={() => onDeleteTasks(task.id)}\r\n    // on the click we make a function which points to onDeleteTasks(task.id)\r\n    // this makes it so we can pass something into the param\r\n    // if we dont have the '()=>' passing parameters wont work since we set \r\n    // onDeleteTasks = to a function variable (const deleteTask in App.js)\r\n\r\n    // and here we are, we are taking task and then getting the text attribute\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDeleteApp, onToggle}) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task) => ( // instead of { we use ( because we want to return jsx\r\n            <Task key={task.id} task={task} onDeleteTasks={onDeleteApp} onToggle={onToggle} />\r\n          ))}  \r\n        </>\r\n    )\r\n    // Above we are looping through the tasks prop\r\n    // then we use the Task.js component and pass it the key (needed) & task\r\n    // If you remember mapping it looks like this...\r\n    // arr = [1, 3, 5, 7]\r\n    // arr.map((elem) => {somecode})\r\n    // Instead of the {} we use () to return jsx instead of a function\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text) { alert('Please add a task! '); return }\r\n        if (!day) { alert('Please add a date! '); return }\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <input type='submit' value='Save Task' className='btn btn-block'/>\r\n            </div>\r\n        </form>\r\n    )\r\n    // e is the default event param e.target.value is the value of the event\r\n    // e.currentTarget.checked returns true or false\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\nfunction App() {\n  // states should be at the top level\n  // const [name, setStuffName] = useState([{obj1}, {obj2}, ...])\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Fix House',\n      day: 'Feb 12th at 10:45am',\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: 'Doctors Appointment',\n      day: 'Feb 16th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'CSA Homework',\n      day: 'Feb 19th at 1:10pm',\n      reminder: false,\n    }\n  ])\n  const name = 'Carson';\n  const x = true;\n\n  // Add Task\n  const addTask = (task) => {\n    console.log('bruh!')\n    console.log(task)\n    const id = Math.floor(Math.random() * 10000) + 1\n    console.log(id)\n    const newTask = {id, ...task} // the ...task passes everything from task (text, date, reminder)\n    setTasks([...tasks, newTask]) // sets the tasks from everything there + the new task\n  }\n\n  // Delete Task : We are making a deleteTask function taking in a id param\n  // scroll down and go thru the components to see how deleteTask is passedDown\n  // see how we can customize the name? \n  const deleteTask = (id) => {\n    console.log('delete', id)\n    // setTasks is how we deal with the immutable state\n    // tasks.filter((task) => task.id !== id) \n    // takes our tasks then filters it\n    // we filter it using a foreach thing\n    // each task in tasks \n    // if the task.id doesnt equal the param id,\n    // discard it so tasks only equals the ones with the param id\n    // look up .filter() js \n    // filters out the ones that are false\n    // takes a function as its parameter\n    // i could also do this >>>\n    // function isEqual(task) { return (task.id == id) }\n    // tasks.filter(isEqual(task))\n    // i think.......\n    setTasks(tasks.filter((task) => (\n      task.id !== id\n    )))\n    // sets the tasks to the filtered tasks\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    console.log(id)\n    setTasks(tasks.map((task) => (\n      task.id === id ? {...task, reminder: !task.reminder} : task\n    )))\n    // setTasks so we modify,\n    // tasks.map modifies elements\n    // then we take each task obj and modify it\n    // map ( (task) => {  } )\n    // { if the task id == id then set reminder = !reminder else, just leave the task as is }\n    // arrow functions with () return \n    // arrow functions with {} is a function\n  }\n\n  return (\n    <div className='container'>\n      <Header title='Task Tracker' showAddTask={showAddTask} onAdd={() => setShowAddTask(!showAddTask)}/>\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDeleteApp={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n      {showAddTask && <AddTask onAdd={addTask}/>}\n    </div>\n    // jsx can only take one parent component instead of div you can do <> </> if you dont want a div\n    // {x ? 'Task when true' : 'Task when false'}  \n    // use {} for js\n\n    // var x = 10\n    // console.log(x > 5 ? 'greater!' : 'smaller!') - prints greater\n    // easy way to do if else statements\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}